<?php

require_once WC_LOAD_TEST_DIR . '/includes/abstract-load-test.php';

/**
 * Class CompleteOrderLoadTest.
 *
 * Load test for checkout with product having stock limit, and applying two coupons, one with a per-user usage limit and other with a global usage limit.
 */
class ProcessCheckout extends LoadTest {

	public static function setup() {
		$product = new \WC_Product();
		$product->set_props(
			array(
				'name'           => 'Generated by Load testing ',
				'regular_price'  => 100,
				'sales_price'    => 50,
				'tax_status'     => 'taxable',
				'manage_stock'   => true,
				'stock_quantity' => (int) ( $_POST['stock_quantity'] ),
				'stock_status'   => 'instock',
			)
		);
		$product->save();

		$coupon_with_global_usage_limit = new \WC_Coupon();
		$coupon_with_global_usage_limit->set_code( 'load-test-coupon-10' . time() );
		$coupon_with_global_usage_limit->set_amount( 10 );
		$coupon_with_global_usage_limit->set_discount_type( 'percent' );
		$coupon_with_global_usage_limit->set_usage_limit( 100000 );
		$coupon_with_global_usage_limit->save();

		$coupon_with_per_user_usage_limit = new \WC_Coupon();
		$coupon_with_per_user_usage_limit->set_code( 'load-test-coupon-20' . time() );
		$coupon_with_per_user_usage_limit->set_amount( 20 );
		$coupon_with_per_user_usage_limit->set_discount_type( 'percent' );
		$coupon_with_per_user_usage_limit->set_usage_limit_per_user( 100000 );
		$coupon_with_per_user_usage_limit->save();

		WC()->frontend_includes();
		wc_load_cart();
		wc_empty_cart( true );

		WC()->cart->add_to_cart( $product->get_id(), 1 );
		WC()->cart->apply_coupon( $coupon_with_global_usage_limit->get_code() );
		WC()->cart->apply_coupon( $coupon_with_per_user_usage_limit->get_code() );
		$package = array(
			'destination' => array(
				'country'  => 'US',
				'state'    => 'NY',
				'postcode' => '10025',
			),
		);
		$zone = WC_Shipping_Zones::get_zone_matching_package( $package );
		$zone->add_shipping_method( 'free_shipping' );

		return array(
			'product_id'         => $product->get_id(),
			'quantity'           => 1,
			'coupon1'            => $coupon_with_global_usage_limit->get_code(),
			'coupon2'            => $coupon_with_per_user_usage_limit->get_code(),
			'test_slug'          => 'process-checkout',
			'payment_method'     => 'cod',
			'shipping_method'    => 'free_shipping',
			'billing_first_name' => 'Load',
			'billing_last_name'  => 'Testing',
			'billing_country'    => 'US',
			'billing_address_1'  => '55 Central Park West',
			'billing_address_2'  => 'Shandor building',
			'billing_city'       => 'Manhattan',
			'billing_state'      => 'NY',
			'billing_postcode'   => '10025',
			'billing_email'      => 'load@example.com',
			'shipping_country'   => 'US',
			'billing_phone'      => '999999999',
			'terms'              => true
		);
	}

	public static function process_checkout_with_coupons() {
		add_filter( 'wp_doing_ajax', '__return_true', 1 );
		$_REQUEST['woocommerce-process-checkout-nonce'] = $_POST['load-test-nonce'];
		WC()->frontend_includes();
		wc_load_cart();
		// Don't destroy session so that we can persist cart across requests.
		remove_all_actions( 'woocommerce_cart_emptied' );
		WC()->checkout()->process_checkout();
	}


	public static function render() {
		require WC_LOAD_TEST_DIR . '/templates/process-checkout.php';
	}
}
